{"version":3,"sources":["constants/localeSet.js","rootReducer.js","reducers/locale.js","store/store.js","components/messages.js","lib/requestManager.js","lib/api.js","components/SignedIn.js","components/NotSignedIn.js","components/Header.js","actions/changeLocale.js","components/Signin.js","constants/magicNumbers.js","components/Signup.js","components/Item.js","components/CreatableInput.js","components/ListItem.js","lib/notifications.js","components/ListContainer.js","components/Dashboard.js","components/App.js","index.js"],"names":["LOCALE_SET","combineReducers","locale","state","arguments","length","undefined","lang","action","type","store","createStore","rootReducer","applyMiddleware","thunk","messages","en","nav.mainpage","nav.dashboard","nav.signin","nav.hi","nav.settings","nav.logout","nav.username","nav.password","nav.password_confirmation","nav.signup","ru","requestManager","baseOptions","method","headers","Content-Type","Authorization","localStorage","getItem","baseLoadOptions","params","authorizeOptions","url","options","axios","concat","this","axiosReq","data","Object","objectSpread","Api","id","prototype","List","show","RequestManager","get","post","put","destroy","Username","Item","getLoadOptions","Token","postAuthorize","Signup","api","SignedIn","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","username","_this2","then","response","setState","react_default","a","createElement","reactstrap_es","inNavbar","nav","caret","index_es","defaultMessage","right","Link","className","to","divider","renderRedirect","onClick","onHandleClearStorage","Component","NotSignedIn","Header","componentDidMount","signedIn","setRedirect","redirect","Redirect","handleToggle","isOpen","clearLocalStorage","removeItem","handleClearStorageAndRedirect","handleClickChangeLanguage","setLocale","color","expand","light","navbar","components_NotSignedIn","components_SignedIn","defaultProps","connect","dispatch","setItem","localeSet","SignIn","validate","errors","formIsValid","password","handleChange","_ref","_this$setState","target","defineProperty","name","value","handleSubmit","event","preventDefault","jwt","history","push","components_Header","sm","size","offset","for","onChange","placeholder","SignUp","handleValidation","password_confirmation","user","catch","error","errorExist","exist","item","content","onHandleDestroyItem","index","CreatableInput","loadOptions","inputValue","callback","items","result","_","forEach","option","label","handleCreateItem","selectedOption","list_id","list","toConsumableArray","handleDestroyItem","splice","handleKeyDown","key","_this3","AsyncCreatable_default","isClearable","onKeyDown","react_transition_group","map","classNames","timeout","components_Item","ListItem","handleOpen","prevState","open","editable_default","dataType","onHandleEdit","mode","showButtons","title","day","month","Date","createdAt","year","onHandleDestroyList","components_CreatableInput","createNotification","lib_notifications","NotificationManager","success","ListContainer","validateList","handleEdit","notifications","handleDestroyList","lists","handleCreateList","sort","b","components_ListItem","lib","Dashboard","components_ListContainer","HashRouter","Route","component","exact","path","addLocaleData","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.54e431ad.chunk.js","sourcesContent":["export const LOCALE_SET = 'LOCALE_SET';\n","import { combineReducers } from 'redux';\nimport locale from './reducers/locale';\n\nexport default combineReducers({\n  locale\n});\n","import { LOCALE_SET } from '../constants/localeSet';\n\nexport default function locale(state = { lang: 'en' },action = {}){\n  switch(action.type){\n    case LOCALE_SET:\n      return { lang: action.lang };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;\n","export default {\n  en: {\n    'nav.mainpage': 'Main',\n    'nav.dashboard': 'List Up',\n    'nav.signin': 'Signin',\n    'nav.hi': 'Hi',\n    'nav.settings': 'Settings',\n    'nav.logout': 'Logout',\n    'nav.username': 'Username',\n    'nav.password': 'Password',\n    'nav.password_confirmation': 'Password confirmation',\n    'nav.signup': 'Sign up'\n  },\n  ru: {\n    'nav.mainpage': 'Главная',\n    'nav.dashboard': 'List Up',\n    'nav.signin': 'Войти',\n    'nav.hi': 'Привет',\n    'nav.settings': 'Настройки',\n    'nav.logout': 'Выйти',\n    'nav.username': 'Имя',\n    'nav.password': 'Пароль',\n    'nav.password_confirmation': 'Повторите пароль',\n    'nav.signup': 'Регистрация'\n  }\n};\n","import axios from 'axios';\n\nclass RequestManager {\n  baseOptions = (method) => ({\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization' : localStorage.getItem('jwt')\n    }\n  })\n\n  baseLoadOptions = (method, params) => ({\n    method,\n    params,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization' : localStorage.getItem('jwt')\n    }\n  })\n\n  authorizeOptions = (method) => ({\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n\n  axiosReq(url, options) {\n    return axios(`/api/${url}`, options);\n  }\n\n  getLoadOptions(url, params) {\n    return this.axiosReq(url, this.baseLoadOptions('GET', params));\n  }\n\n  get(url) {\n    return this.axiosReq(url, this.baseOptions('GET'));\n  }\n\n  postAuthorize(url, data) {\n      return this.axiosReq(url, { ...this.authorizeOptions('POST'), data });\n  }\n\n  post(url, data) {\n    return this.axiosReq(url, { ...this.baseOptions('POST'), data });\n  }\n\n  put(url, data) {\n    return this.axiosReq(url, { ...this.baseOptions('PUT'), data });\n  }\n\n  destroy(url) {\n    return this.axiosReq(url, this.baseOptions('DELETE'));\n  }\n}\n\nexport default new RequestManager();\n","import RequestManager from './requestManager';\n\nfunction Api(id, data) {\n  this.id = id;\n  this.data = data;\n}\n\nApi.prototype.List = {\n  show: (id) => {\n    return RequestManager.get(`lists/${id}`);\n  },\n\n  get: () => {\n    return RequestManager.get('lists');\n  },\n\n  post: (data) => {\n    return RequestManager.post('lists', data);\n  },\n\n  put: (id, data) => {\n    return RequestManager.put(`lists/${id}`, data);\n  },\n\n  destroy: (id) => {\n    return RequestManager.destroy(`lists/${id}`);\n  }\n};\n\nApi.prototype.Username = {\n  get: () => {\n    return RequestManager.get('usernames');\n  }\n};\n\nApi.prototype.Item = {\n  get: (data) => {\n    return RequestManager.getLoadOptions('items', data);\n  },\n\n  post: (data) => {\n    return RequestManager.post('items', data);\n  },\n\n  destroy: (id) => {\n    return RequestManager.destroy(`items/${id}`);\n  }\n};\n\nApi.prototype.Token = {\n  post: (data) => {\n    return RequestManager.postAuthorize('tokens', data);\n  }\n};\n\nApi.prototype.Signup = {\n  post: (data) => {\n    return RequestManager.postAuthorize('users', data);\n  }\n};\n\nexport default new Api();\n","import React, { Component } from 'react';\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/header.scss';\nimport Api from '../lib/api';\n\nclass SignedIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: undefined,\n    };\n  }\n\n  componentDidMount() {\n    Api.Username.get()\n    .then((response) => {\n      this.setState({ username: response.data });\n    });\n  }\n\n  render() {\n    return(\n      <UncontrolledDropdown inNavbar nav>\n        <DropdownToggle caret nav>\n          <FormattedMessage defaultMessage=\"Hi\" id=\"nav.hi\" />, {this.state.username}\n        </DropdownToggle>\n        <DropdownMenu id=\"dropdown\" right>\n          <DropdownItem>\n            <FormattedMessage defaultMessage=\"Settings\" id=\"nav.settings\" />\n          </DropdownItem>\n          <DropdownItem>\n            <Link className='main-link' to=\"/dashboard\" >\n              <FormattedMessage defaultMessage=\"Main\" id=\"nav.mainpage\" />\n            </Link>\n          </DropdownItem>\n          <DropdownItem divider />\n          {this.props.renderRedirect()}\n          <DropdownItem onClick={this.props.onHandleClearStorage}>\n            <FormattedMessage defaultMessage=\"Logout\" id=\"nav.logout\" />\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    );\n  }\n}\n\nSignedIn.propTypes = {\n  onHandleClearStorage: PropTypes.func,\n  renderRedirect: PropTypes.func\n};\n\nexport default SignedIn;\n","import React from 'react';\nimport {\n  Nav,\n  NavItem\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport '../stylesheets/header.scss';\n\nconst NotSignedIn = () => {\n  return (\n    <Nav>\n      <NavItem>\n        <Link to=\"/signup\">\n          <button\n              className='header-signup'\n              type='button'>\n            <FormattedMessage defaultMessage=\"Signup\" id=\"nav.signup\" />\n          </button>\n        </Link>\n      </NavItem>\n      <NavItem>\n        <Link to=\"/\">\n          <button\n              className='header-signin'\n              type='button'>\n            <FormattedMessage defaultMessage=\"Signin\" id=\"nav.signin\" />\n          </button>\n        </Link>\n      </NavItem>\n    </Nav>\n  );\n};\n\nexport default NotSignedIn;\n","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  Container\n} from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { setLocale } from '../actions/changeLocale';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/header.scss';\nimport SignedIn from './SignedIn';\nimport NotSignedIn from './NotSignedIn';\n\nclass Header extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      redirect: false,\n      signedIn: false\n    };\n  }\n\n  componentDidMount = () => {\n    if (localStorage.getItem('jwt')) {\n      this.setState({ signedIn: true });\n    }\n  }\n\n  setRedirect = () => {\n    this.setState({ redirect: true });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/' />;\n    }\n  }\n\n  handleToggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  clearLocalStorage = () => {\n    localStorage.removeItem('jwt');\n  }\n\n  handleClearStorageAndRedirect = () => {\n    this.clearLocalStorage();\n    this.setRedirect();\n  }\n\n  handleClickChangeLanguage = (lang) => () => {\n    this.props.setLocale(lang);\n  }\n\n  render() {\n    return (\n      <Navbar className='header-navbar' color=\"light\" expand=\"md\" light>\n        <Container>\n          <NavbarBrand>\n            <FormattedMessage defaultMessage=\"Listup\" id=\"nav.dashboard\" />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.handleToggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              {!this.state.signedIn &&\n                <NotSignedIn />\n              }\n              {this.state.signedIn &&\n                <SignedIn\n                    onHandleClearStorage={this.handleClearStorageAndRedirect}\n                    renderRedirect={this.renderRedirect} />\n              }\n              <div className='сhangeLanguage'>\n                <button\n                    className='button-en'\n                    onClick={this.handleClickChangeLanguage('en')}\n                    type='button'>\n                  EN\n                </button>\n                <button\n                    className='button-ru'\n                    onClick={this.handleClickChangeLanguage('ru')}\n                    type='button'>\n                  RU\n                </button>\n              </div>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  setLocale: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    setLocale: state.locale\n  };\n};\n\nHeader.defaultProps = {\n  setLocale: () => {}\n};\n\nexport default connect (mapStateToProps, { setLocale })(Header);\n","import { LOCALE_SET } from '../constants/localeSet';\n\nexport const localeSet = (lang) => ({\n  type: LOCALE_SET,\n  lang\n});\n\nexport const setLocale = (lang) => (dispatch) => {\n  localStorage.setItem('lang', 'en');\n  dispatch(localeSet(lang));\n};\n","import React, { Component } from 'react';\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Col\n} from 'reactstrap';\nimport Header from './Header';\nimport PropTypes from 'prop-types';\nimport * as size from '../constants/magicNumbers';\nimport '../stylesheets/signin.scss';\nimport Api from '../lib/api';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errors: {}\n    };\n  }\n\n  validate = () => {\n    let errors = {};\n    let formIsValid = true;\n\n    if (!this.state.username) {\n      formIsValid = false;\n      errors['username'] = 'Username cannot be empty';\n    }\n\n    if (!this.state.password) {\n      formIsValid = false;\n      errors['password'] = 'Password cannot be empty';\n    }\n\n    if (this.state.password.length < 8) {\n      formIsValid = false;\n      errors['password_length'] = 'Password is too short (minimum is 8 characters)';\n    }\n\n    this.setState({ errors });\n    return formIsValid;\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value, errors: {} });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.validate()) {\n      Api.Token.post({\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then((response) => localStorage.setItem('jwt', response.data.jwt))\n      .then(() => this.props.history.push('/dashboard'));\n    }\n  }\n\n  render() {\n    return(\n      <div className='signin'>\n        <Header />\n        <Container>\n          <Col sm={{ size: size.SIZE_6, offset: size.SIZE_3 }}>\n            <Card>\n              <CardHeader className='signin-header'>Sign in</CardHeader>\n              <CardBody>\n                <Form>\n                  <FormGroup>\n                    <Label for=\"username\">Username</Label>\n                    <Input\n                        id='username'\n                        name='username'\n                        onChange={this.handleChange}\n                        placeholder=\"Username\"\n                        type='username'\n                        value={this.state.username} />\n                    <div className='text-danger'>\n                      {this.state.errors['username']}\n                    </div>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"password\">Password</Label>\n                    <Input\n                        id='password'\n                        name='password'\n                        onChange={this.handleChange}\n                        placeholder=\"Password\"\n                        type='password'\n                        value={this.state.password} />\n                    <div className='text-danger'>\n                      {this.state.errors['password']}\n                    </div>\n                    <div className='text-danger'>\n                      {this.state.errors['password_length']}\n                    </div>\n                  </FormGroup>\n                  <button\n                      className='signin-button'\n                      onClick={this.handleSubmit}\n                      type='button'>\n                    Sign in\n                  </button>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Container>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  history: PropTypes.object\n};\n\nSignIn.defaultProps = {\n  history: {}\n};\n\nexport default SignIn;\n","export const SIZE_1 = '1';\nexport const SIZE_2 = '2';\nexport const SIZE_3 = '3';\nexport const SIZE_4 = '4';\nexport const SIZE_5 = '5';\nexport const SIZE_6 = '6';\nexport const SIZE_7 = '7';\nexport const SIZE_8 = '8';\nexport const SIZE_9 = '9';\nexport const SIZE_10 = '10';\nexport const SIZE_11 = '11';\nexport const SIZE_12 = '12';\n","/* eslint-disable react/jsx-no-literals */\nimport React, { Component } from 'react';\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Col\n} from 'reactstrap';\nimport Header from './Header';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport * as size from '../constants/magicNumbers';\nimport '../stylesheets/signup.scss';\nimport Api from '../lib/api';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      password_confirmation: '',\n      errors: {},\n      errorExist: '',\n      exist: true\n    };\n  }\n\n  handleValidation = () => {\n    let errors = {};\n    let formIsValid = true;\n\n    if (!this.state.username) {\n      formIsValid = false;\n      errors['username'] = 'Username cannot be empty';\n    }\n\n    if (!this.state.password) {\n      formIsValid = false;\n      errors['password'] = 'Password cannot be empty';\n    }\n\n    if (!this.state.password_confirmation) {\n      formIsValid = false;\n      errors['password_confirmation'] = 'Password confirmation cannot be empty';\n    }\n\n    if (this.state.password_confirmation !== this.state.password) {\n      formIsValid = false;\n      errors['password_confirmation_equal'] = 'Password confirmation must be equal to Password';\n    }\n\n    if (this.state.password.length < 8) {\n      formIsValid = false;\n      errors['password_length'] = 'Password is too short (minimum is 8 characters)';\n    }\n\n    this.setState({ errors });\n    return formIsValid;\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value, exist: true, errorExist: '', errors: { [target.name]: null } });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.handleValidation()) {\n      Api.Signup.post({ user: {\n        'username': this.state.username,\n        'password': this.state.password,\n        'password_confirmation': this.state.password_confirmation }\n      })\n      .catch(error => {\n        this.setState({ errorExist: error.response.data.errors, exist: false });\n      })\n      .then(() => {\n        if (this.state.exist) {\n          this.props.history.push('/');\n        }\n      });\n    }\n  }\n\n  render() {\n    return(\n      <div className='signup'>\n        <Header />\n        <Container>\n          <Col sm={{ size: size.SIZE_6, offset: size.SIZE_3 }}>\n            <Card>\n              <CardHeader className='signup-header'>\n                <FormattedMessage defaultMessage=\"Sign up\" id=\"nav.signup\" />\n              </CardHeader>\n              <CardBody>\n                <Form>\n                  <FormGroup>\n                    <Label for=\"username\">\n                      <FormattedMessage defaultMessage=\"Username\" id=\"nav.username\" />\n                    </Label>\n                    <Input\n                        id='username'\n                        name='username'\n                        onChange={this.handleChange}\n                        placeholder=\"Username\"\n                        type='username'\n                        value={this.state.username} />\n                    <div className='text-danger'>\n                      {this.state.errors['username']}\n                    </div>\n                    <div className='text-danger'>\n                      {this.state.errorExist}\n                    </div>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"password\">\n                      <FormattedMessage defaultMessage=\"Password\" id=\"nav.password\" />\n                    </Label>\n                    <Input\n                        id='password'\n                        name='password'\n                        onChange={this.handleChange}\n                        placeholder=\"Password\"\n                        type='password'\n                        value={this.state.password} />\n                    <div className='text-danger'>\n                      {this.state.errors['password']}\n                    </div>\n                    <div className='text-danger'>\n                      {this.state.errors['password_length']}\n                    </div>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"password\">\n                      <FormattedMessage defaultMessage=\"Password confirmation\" id=\"nav.password_confirmation\" />\n                    </Label>\n                    <Input\n                        id='password_confirmation'\n                        name='password_confirmation'\n                        onChange={this.handleChange}\n                        placeholder=\"Password Confirmation\"\n                        type='password'\n                        value={this.state.password_confirmation} />\n                    <div className='text-danger'>\n                      {this.state.errors['password_confirmation']}\n                    </div>\n                    <div className='text-danger'>\n                      {this.state.errors['password_confirmation_equal']}\n                    </div>\n                  </FormGroup>\n                  <button\n                      className='signup-button'\n                      onClick={this.handleSubmit}\n                      type='button'>\n                    <FormattedMessage defaultMessage=\"Sign up\" id=\"nav.signup\" />\n                  </button>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Container>\n      </div>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default SignUp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/creatableInput.scss';\nimport { Col, Row } from 'reactstrap';\nimport * as size from '../constants/magicNumbers';\n\nconst Item = (props) => (\n  <Row className='single-item'>\n    <Col className='item-content'>\n      {props.item.content}\n    </Col>\n    <Col sm={{ offset: size.SIZE_1 }}>\n      <button\n          className='destroy-item'\n          onClick={props.onHandleDestroyItem(props.index, props.item)}\n          type='button'>\n        Delete\n      </button>\n    </Col>\n  </Row>\n);\n\nItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  item: PropTypes.object.isRequired,\n  onHandleDestroyItem: PropTypes.func\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport AsyncCreatableSelect from 'react-select/lib/AsyncCreatable';\nimport PropTypes from 'prop-types';\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\nimport '../stylesheets/creatableInput.scss';\nimport {\n  Col,\n  Row\n} from 'reactstrap';\nimport Api from '../lib/api';\nimport * as size from '../constants/magicNumbers';\nimport Item from './Item';\nimport _ from 'lodash';\n\nclass CreatableInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: '',\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    Api.List.show(this.props.list.id)\n    .then((response) => {\n      this.setState({ items: response.data });\n    });\n  }\n\n  loadOptions = (inputValue, callback) => {\n    Api.Item.get({ inputValue })\n    .then((response) => {\n      const items = response.data;\n      let result = [];\n      _.forEach(items, (option) => {\n        result.push({ label: option, value: option });\n      });\n      callback(result);\n    });\n  }\n\n  handleCreateItem = (event) => {\n    event.preventDefault();\n    Api.Item.post({\n      content: this.state.selectedOption.value,\n      list_id: this.props.list.id\n    })\n    .then((response) => {\n      const items = [...this.state.items, response.data];\n      this.setState({ items });\n    });\n  }\n\n  handleChange = (name) => (value) => {\n    this.setState({ [name]: value });\n  }\n\n  handleDestroyItem = (index, item) => () => {\n    let items = [...this.state.items];\n    items.splice(index, 1);\n    this.setState({ items });\n    Api.Item.destroy(item.id);\n  }\n\n  handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      this.handleCreateItem(event);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col sm={{ size: size.SIZE_10 }}>\n            <AsyncCreatableSelect\n                className='async-creatable'\n                isClearable\n                loadOptions={this.loadOptions}\n                name='selectedOption'\n                onChange={this.handleChange('selectedOption')}\n                onKeyDown={this.handleKeyDown}\n                value={this.state.selectedOption} />\n          </Col>\n          <button\n              className='new-item'\n              id='button'\n              onClick={this.handleCreateItem}\n              type='button'>\n            +\n          </button>\n        </Row>\n        <TransitionGroup className=\"all-items\">\n          {this.state.items.map((item, index) => (\n            <CSSTransition\n                classNames=\"fade\"\n                key={item.id}\n                timeout={700}>\n              <Item\n                  index={index}\n                  item={item}\n                  onHandleDestroyItem={this.handleDestroyItem} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nCreatableInput.propTypes = {\n  list: PropTypes.object.isRequired\n};\n\nexport default CreatableInput;\n","import React, { Component } from 'react';\nimport {\n  Col,\n  Row\n} from 'reactstrap';\nimport * as size from '../constants/magicNumbers';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\nimport '../stylesheets/items.scss';\nimport CreatableInput from './CreatableInput';\nimport Editable from 'react-x-editable';\n\nclass ListItem extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      content: ''\n    };\n  }\n\n  handleOpen = () => {\n    this.setState((prevState) => ({ open: !prevState.open }));\n  }\n\n  render() {\n    return(\n      <Row className=\"single-list\">\n        <Col sm={{ size: size.SIZE_1 }}>\n          {this.props.index + 1}\n        </Col>\n        <Col sm={{ size: size.SIZE_3 }}>\n          <div className='title-label'>\n            <Editable\n                dataType='text'\n                handleSubmit={this.props.onHandleEdit(this.props.list)}\n                mode={'inline'}\n                showButtons={'true'}\n                value={this.props.list.title} />\n          </div>\n        </Col>\n        <Col>\n          <div className='create-date'>\n            <FormattedDate\n                day=\"numeric\"\n                month=\"long\"\n                value={new Date(this.props.list.createdAt)}\n                year=\"numeric\" />\n          </div>\n        </Col>\n        <Col>\n          <button\n              className={this.state.open ? 'close-button' : 'create-item'}\n              onClick={this.handleOpen}\n              type='button'>\n            {this.state.open ? 'close' : '+ item'}\n          </button>\n          <button\n              className='delete-list'\n              onClick={this.props.onHandleDestroyList(this.props.index, this.props.list)}\n              type='button'>\n            - list\n          </button>\n        </Col>\n        {this.state.open &&\n        <Col className='open-item' sm={{ size: size.SIZE_8, offset: size.SIZE_2 }}>\n          <div className='creatable-input'>\n            <CreatableInput\n                createNotification={this.props.createNotification}\n                list={this.props.list} />\n          </div>\n        </Col>}\n      </Row>\n    );\n  }\n}\n\nListItem.propTypes = {\n  createNotification: PropTypes.func,\n  index: PropTypes.number,\n  list: PropTypes.object.isRequired,\n  onHandleDestroyList: PropTypes.func,\n  onHandleEdit: PropTypes.func\n};\n\nexport default ListItem;\n","import { NotificationManager } from 'react-notifications';\n\nclass Notifications {\n  createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'success':\n          NotificationManager.success('Succesfully created');\n          break;\n        case 'delete':\n          NotificationManager.success('Succesfully deleted');\n          break;\n        case 'edit':\n          NotificationManager.success('Succesfully updated');\n          break;\n        default:\n          break;\n      }\n    };\n  };\n}\n\nexport default new Notifications();\n","import React, { Component } from 'react';\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Container,\n  Col,\n  Row\n} from 'reactstrap';\nimport * as size from '../constants/magicNumbers';\nimport ListItem from './ListItem';\nimport 'react-notifications/lib/notifications.css';\nimport '../stylesheets/lists.scss';\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\nimport { NotificationContainer } from 'react-notifications';\nimport notifications from '../lib/notifications';\nimport Api from '../lib/api';\n\nclass ListContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      title: '',\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    Api.List.get()\n    .then((response) => {\n      this.setState({ lists: response.data });\n    });\n  }\n\n  validateList = () => {\n    let errors = {};\n    let formIsValid = true;\n\n    if (!this.state.title) {\n      formIsValid = false;\n      errors['title_length'] = 'Title cannot be empty (minimum is 1 character)';\n    }\n\n    this.setState({ errors });\n    return formIsValid;\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value, errors: {} });\n  }\n\n  handleEdit = (list) => (target) => {\n    Api.List.put(list.id, { 'title': target.value })\n    .then(notifications.createNotification('edit'));\n  }\n\n  handleDestroyList = (index, list) => () => {\n    let lists = [...this.state.lists];\n    lists.splice(index, 1);\n    this.setState({ lists });\n    Api.List.destroy(list.id)\n    .then(notifications.createNotification('delete'));\n  }\n\n  handleCreateList = (event) => {\n    event.preventDefault();\n      if (this.validateList()) {\n      Api.List.post({ list: { 'title': this.state.title } })\n      .then((response) => {\n        const lists = [...this.state.lists, response.data];\n        this.setState({ lists });\n      })\n      .then(notifications.createNotification('success'));\n    }\n  }\n\n  handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      this.handleCreateList(event);\n    }\n  }\n\n  render() {\n    return(\n      <Container className='list'>\n        <Col sm={{ size: size.SIZE_8, offset: size.SIZE_2 }}>\n          <Form>\n            <FormGroup>\n              <Row>\n                <Col sm={{ size: size.SIZE_10 }}>\n                  <Input\n                      className='title-input'\n                      id='title'\n                      name='title'\n                      onChange={this.handleChange}\n                      onKeyDown={this.handleKeyDown}\n                      placeholder='Add List'\n                      value={this.state.title} />\n                  <div className='text-danger'>\n                    {this.state.errors['title_length']}\n                  </div>\n                </Col>\n                <Col sm={{ size: size.SIZE_2 }}>\n                  <button\n                      className='create-list'\n                      id='list_button'\n                      onClick={this.handleCreateList}\n                      type='button'>\n                    +\n                  </button>\n                </Col>\n              </Row>\n            </FormGroup>\n          </Form>\n        </Col>\n        <Col sm={{ size: size.SIZE_8, offset: size.SIZE_2 }}>\n          <Row className=\"table-header\">\n            <Col sm={{ size: size.SIZE_1 }}>#</Col>\n            <Col sm={{ size: size.SIZE_3 }}>List name</Col>\n            <Col>Create date</Col>\n            <Col>Actions</Col>\n          </Row>\n          <TransitionGroup className=\"todo-list\">\n            {this.state.lists.sort((a, b) => (b.id - a.id)).map((list, index) => (\n              <CSSTransition\n                  classNames=\"fade\"\n                  key={list.id}\n                  timeout={500}>\n                <ListItem\n                    createNotification={this.createNotification}\n                    index={index}\n                    key={list.id}\n                    list={list}\n                    onHandleDestroyList={this.handleDestroyList}\n                    onHandleEdit={this.handleEdit} />\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </Col>\n        <NotificationContainer />\n      </Container>\n    );\n  }\n}\n\nexport default ListContainer;\n","import React from 'react';\nimport ListContainer from './ListContainer';\nimport Header from './Header';\n\nconst Dashboard = () => (\n  <div className='dashboard'>\n    <Header />\n    <ListContainer />\n  </div>\n);\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.scss';\nimport {\n  HashRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport messages from './messages';\nimport { IntlProvider } from 'react-intl';\nimport SignIn from './Signin';\nimport SignUp from './Signup';\nimport Dashboard from './Dashboard';\n\nconst App = ({ lang }) => {\n  return (\n    <IntlProvider locale={lang} messages={messages[lang]}>\n      <Router>\n        <div>\n          <Route component={SignIn} exact path=\"/\" />\n          <Route component={SignUp} path=\"/signup\" />\n          <Route component={Dashboard} path=\"/dashboard\" />\n        </div>\n      </Router>\n    </IntlProvider>\n  );\n};\n\nApp.propTypes = {\n  lang: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    lang: state.locale.lang\n  };\n}\n\nexport default connect (mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport { addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport ru from 'react-intl/locale-data/ru';\n\naddLocaleData(en);\naddLocaleData(ru);\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\n"],"sourceRoot":""}